<section class="section">
  <div class="container py-4 is-vcentered">
    <div class="columns">
      <div class="column is-6">
        <h2 class="title">Welcome to smokex.io <span class="pl-3">ðŸŽ‰</span></h2>
        <h3 class="title is-5">Let's get rocked!</h3>

        <p class="subtitle is-6">We've designed a simple and powerful tool to automate any HTTP request. You can use Smokex for:</p>

        <div class="content">
          <ul>
            <li>Create <a href="https://en.wikipedia.org/wiki/Smoke_testing_(software)">smoke tests</a> to check if a release is up and running.</li>
            <li>Schedule a HTTP request to keep Heroku instances up.</li>
            <li>Send a ping request to ensure a system is reachable.</li>
            <li>Automate data transfer between third party tools.</li>
            <li>Anything you can imagine.</li>
          </ul>

          <h3 class="title">Benefits</h3>
          <p>Although Smokex can be consider as an HTTP request tool, it's main purpose is to <strong>create smoke tests</strong> and use them in the development workflow.<p>
          <p>During our career, we faced the same question several times: <i>how can we ensure we don't deploy a broken release?</i> And the quick answer is, as always, you can't be sure of that. But you can minimize the impact by checking the correctness of your application and releases by running smoke tests periodically.</p>
        </div>

        <div class="buttons"><a class="button is-primary" href="/plans/new">Create my first plan</a><a class="button is-text" href="/docs">Or read the documentation</a></div>
      </div>

      <div class="column is-6">
        <h2 class="title">Getting started</h2>

        <h3 class="title is-5">We will help you to take you first steps</h3>
        <p class="subtitle is-6">Creating any test plan is extremely easy and can be done in 3 simple steps.</p>

        <div class="media">
          <div class="media-left">
            <div class="number has-background-primary has-text-white">1</div>
          </div>
          <div class="media-content">
            <div class="content">
              <h3>Create a plan</h3>
              <p><a href="/plans/new">Create a test plan</a> that will assert a 200 response and a specific value in the response:</p>

              <section class="cheatsheet">
                <pre phx-update="ignore" class="box"><code class="language-yaml"><span>- post:
    host: "http://httpbin.org"
    body:
      name: "Michael Jordan"
      number: 23
    expect:
      status_code: 200
      body:
        json:
          number: 23
                </span></code></pre>
              </section>
            </div>
          </div>
        </div>
        <div class="media">
          <div class="media-left">
            <div class="number has-background-primary has-text-white">2</div>
          </div>
          <div class="media-content">
            <div class="content">
              <h3>Launch an execution</h3>
              <p>When you create a new plan you schedule executions using a <a href="https://crontab.guru/examples.html" target="_blank">cron sentence</a>, additionally you can manually run your plan on demand.</p>
            </div>
          </div>
        </div>
        <div class="media">
          <div class="media-left">
            <div class="number has-background-primary has-text-white">3</div>
          </div>
          <div class="media-content">
            <div class="content">
              <h3>Check the result</h3>
              <p>You can check <a href="/executions">all the executions</a> of your plans, including the detail of any failed assertions or errors.</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
